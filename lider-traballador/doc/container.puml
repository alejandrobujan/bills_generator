@startuml duxir_container
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml


System_Ext(client, "Cliente", "Quere enviar unha petición a un servizo determinado")
System_Boundary(duxir,"Duxir"){

	Container(lider,"Lider","Ten a api pública para os clientes. Redirixe as peticións aos traballadores, mantén a información sobre o estado dos servizos (traballadores, traballos asignados...), á vez que analiza a carga dos mesmos e levanta ou para traballadores en función do estado dos servizos")
	
	Container_Boundary(servizo_1,"Servizo 1"){
		Component(servizo_1_w1,"Traballador 1", "Recibe peticións e devolve unha resposta de acordo á tarefa que realiza o servizo")
		Component(servizo_1_w2,"Traballador 2", "Recibe peticións e devolve unha resposta de acordo á tarefa que realiza o servizo")
		Component(servizo_1_wn,"Traballador N", "Recibe peticións e devolve unha resposta de acordo á tarefa que realiza o servizo")
	}
	Container_Boundary(servizo_2,"Servizo 2"){
		Component(servizo_2_w1,"Traballador 1", "Recibe peticións e devolve unha resposta de acordo á tarefa que realiza o servizo")
	}

	Container_Boundary(servizo_n,"Servizo N"){
		Component(servizo_n_w1,"Traballador 1", "Recibe peticións e devolve unha resposta de acordo á tarefa que realiza o servizo")
	}
}
Rel_D(client, lider, "Envía", "petición")

Rel(lider, servizo_1_w1, "Redirixe", "petición")
Rel(lider, servizo_1_w2, "Redirixe", "petición")
Rel(lider, servizo_1_wn, "Redirixe", "petición")
Rel(lider, servizo_2_w1, "Redirixe", "petición")
Rel(lider, servizo_n_w1, "Redirixe", "petición")

Rel(servizo_1_w1,lider, "Devolve", "resposta")
Rel(servizo_1_w2,lider, "Devolve", "resposta")
Rel(servizo_1_wn,lider, "Devolve", "resposta")
Rel(servizo_2_w1,lider, "Devolve", "resposta")
Rel(servizo_n_w1,lider, "Devolve", "resposta")


Rel_U(lider,client,"Devolve", "resposta")



@enduml